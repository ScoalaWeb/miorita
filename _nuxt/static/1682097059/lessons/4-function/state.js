window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1682097059",layout:"default",error:b,serverRendered:e,routePath:f,config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:b},content:{dbHash:"8c183788"}},globalRefs:{},pinia:{lesson:{lessons:[{title:"Meet Miorița",description:"take a look at what Miorița can do",link:"lessons\u002F1-intro",background:"1-bg"},{title:"Conditional statements",description:"learn to run different sets of instructions depending on a condition.",link:"lessons\u002F2-if",background:"2-bg"},{title:"Loops & variables",description:"find ways to run the same commands multiple times in succesion.",link:"lessons\u002F3-while",background:"3-bg"},{title:g,description:"create your own insructions that you can reuse whenever you want.",link:"lessons\u002F4-function",background:h}],options:{slug:"4-function",size:{x:7,y:c},start:{position:{x:d,y:a},orientation:"W"},walls:{x:[],y:[{x:a,y:a},{x:d,y:a},{x:c,y:a},{x:i,y:a},{x:j,y:a},{x:5,y:a}]},objects:[{type:"hatchet",position:{x:c,y:d},fixed:k},{type:"vitoria",position:{x:a,y:a},fixed:e}],timeout:1000,dir:"\u002Flessons",path:f,extension:".json",createdAt:l,updatedAt:l,title:g,description:"create your own instructions that you can reuse whenever you want.",background:h,details:[{title:"instructions",text:"We need to remember that repeating code is highly unproductive. This is why, most of the time, we need to resort to reusable snippets of code, called functions.\nTo train Miorița, we need to write some functions and call them every time we need to execute the code.",class:m},{title:"commands",text:"function\npick(\"hatchet\")\ndrop(\"hatchet\")",class:"code"},{title:"challenge",text:"Create your own instructions and help Miorița play fetch.",class:m}],workCode:"\u002F*\nFunctions are declared with the \"function\" keyword, followed by the name of the function.\nThe name of the function follows the same rules as variables.\nAfter the name, we always need a set of parenthesis.\nThe instructions that a function does are grouped in a block, so we use {curly braces}.\n*\u002F\n\n    function turnAround()\n    {\n        turnRight()\n        turnRight()\n    }\n\n\u002F*\nThose parenthesis allow us to define parameters, which will act like variables inside the function block.\n\nParameters can have a default value. If they are not provided, they hold that value.\n\nInside a function we can use absolutely any instructions we learned or other functions we defined.\n*\u002F\n\n    function superMove(times = 1)\n    {\n        for(var i = 0; i \u003C times; i = i+1) {\n            move()\n        }\n    }\n\n\u002F\u002F Now let's use those functions.\n\n    turnAround()\n\u002F\u002F This will cause Miorița to turn right twice, because that's what we defined in the function.\n\u002F\u002F Note that we always need parenthesis when we use a function.\n\u002F\u002F \"Using a function\" is also referred to as \"calling a function\".\n\n    superMove(5) \u002F\u002F Miorița will move forward 5 times.\n\n    turnRight() \u002F\u002F Fun fact: The instructions we learned so far are themselves functions.\n\n    superMove() \u002F\u002F When no value is provided for a parameter, the value we set as default will be used.\n\n    turnRight()\n\n    superMove(4) \u002F\u002F Using different parameters may cause a function to behave differently.\n    \u002F\u002F This time, we're only moving 4 times.\n\n    pick(\"hatchet\")\n    \u002F\u002F Parameters passed to a function can be more than just numbers.\n    \u002F\u002F Here, we pass a string, which is a text marked with \"double quotes\".\n    \u002F\u002F You will learn more about strings when you learn a real programming language.\n\n\u002F\u002F Let's get Miorița back to Vitoria.\n    turnAround()\n    superMove(4)\n    turnAround()\n    turnRight()\n    move()\n    turnAround()\n    turnRight()\n    superMove(5)\n\n\u002F\u002F And finally, we can give Vitoria the hatchet.\n    drop(\"hatchet\")\n",lessonIndex:i,lessonCount:j,nextLesson:b,previousLesson:"3-while"},code:n,editor:b},scheme:{scheme:n,isLightScheme:k}}}}(0,null,2,1,true,"\u002Flessons\u002F4-function","Functions","4-bg",3,4,false,"2023-04-21T17:09:12.972Z","paragraph",""));