window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1671909792",layout:"default",error:g,serverRendered:true,routePath:"\u002Fro\u002Flessons\u002F3-while",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:g},content:{dbHash:"c20fcc56"}},globalRefs:{},pinia:{lesson:{lessons:[{title:"Meet Miorița",description:"take a look at what Miorița can do",link:"lessons\u002F1-intro",background:"1-bg"},{title:"Conditional statements",description:"learn to run different sets of instructions depending on a condition.",link:"lessons\u002F2-if",background:"2-bg"},{title:"Loops & variables",description:"find ways to run the same commands multiple times in succesion.",link:"lessons\u002F3-while",background:i},{title:"Functions",description:"create your own insructions that you can reuse whenever you want.",link:"lessons\u002F4-function",background:"4-bg"}],options:{slug:"3-while",size:{x:j,y:j},start:{position:{x:d,y:d},orientation:"E"},walls:{x:[{x:c,y:f},{x:c,y:e},{x:c,y:a},{x:c,y:b},{x:c,y:c},{x:d,y:e},{x:d,y:a},{x:d,y:b},{x:d,y:c},{x:b,y:e},{x:b,y:a},{x:b,y:b},{x:f,y:a},{x:f,y:b},{x:a,y:a}],y:[{x:d,y:d},{x:f,y:d},{x:e,y:d},{x:a,y:d},{x:b,y:d},{x:c,y:d},{x:f,y:c},{x:e,y:c},{x:a,y:c},{x:b,y:c},{x:c,y:c},{x:f,y:f},{x:e,y:f},{x:a,y:f},{x:b,y:f},{x:e,y:b},{x:a,y:b},{x:b,y:b},{x:e,y:e},{x:a,y:e},{x:a,y:a}]},objects:[{type:"grass",position:{x:a,y:a},fixed:k}],timeout:500,dir:"\u002Flessons",path:"\u002Flessons\u002F3-while",extension:".json",createdAt:l,updatedAt:l,title:"Repetiții & variable",description:"găsește metode să rulezi aceleași comenzi de mai multe ori.",background:i,details:[{title:"instrucțiuni",text:"Știm deja că Miorița poate fi programată pentru a executa anumite comenzi.\nDar va deveni obositor să le scriem pe toate, mai ales într-un scenariu precum acesta, în care trebuie să viziteze toate cele 49 de căsuțe.\nDin fericire, există metode de a repeta cod de câte ori avem nevoie, inclusiv dacă nu știm de câte ori va fi nevoie.",class:h},{title:"chestii noi",text:"for() { }\nwhile() { }\nvar\n",class:h},{title:"provocare",text:"Ajută Miorița să ajungă la centrul stânei.\nSunt mai multe metode pentru a face asta. Unele mai rapide, altele care folosesc mai puțin cod, la altele poate te vei gândi după lecția viitoare.\nTu cum ai face?",class:h}],workCode:"while(canMove()) {\n    \u002F\u002F Comanda \"while\" face instrucțiunea (sau blocul) imediat următoare să se execute când condiția este adevărată\n    move()\n}\n\n\n\n\u002F*\nDacă știi exact de câte ori trebuie să execuți o instrucțiune, poți folosi variabile.\n\nVariabilele sunt modul în care programele țin informații în memoria calculatorului (RAM).\nPoți da orice nume vrei variabilelor atâta timp cât folosești litere, numere, sau câteva caractere speciale. \nNumele unei variabile nu poate începe cu număr.\n\nPentru a crea o variabilă în limbajul folosit aici, se pune „var” urmat de numele variabilei.\nDe exemplu: var variabilaMeaFrumoasa\n\nPentru a pune date în memoria rezervată variabilei, se pune numele variabilei, urmat de egal (=) și valoarea pe care o dăm.\nDe exemplu: variabilaMea = 10\nValoarea poate rezulta și dintr-o ecuație sau expresie. În expresie putem pune orice, inclusiv variabila pe care o setăm.\nDe exemplu: variabila = altaVariabila * 7 \u002F variabila\n\nPrima dată când punem date într-o variabilă, se numește „inițializare”\n\nSe pot combina declararea variabilei, cu inițializarea într-o singură expresie:\n*\u002F\n\nvar iteration = 1\n\nwhile (iteration \u003C 7) {\n    move()\n    iteration = iteration + 1\n}\n\n\n\n\u002F*\n  Pentru că formatul acesta în care știm de câte ori poate fi repetată o serie instrucțiuni este atât de întâlnit,\n  multe limbaje de programare ne permit să scriem întreaga logică în mai puține linii, folosind for:\n*\u002F\n\nfor (var i = 1; i \u003C 7; i = i + 1) {\n    move()\n}\n\n\u002F*\nÎn afara numelui variabilei („i” în loc de „iteration”), instrucțiunea for și while de mai sus sunt identice. \n\nNumele variabilelor trebuie să fie cât mai descriptive, așa că nu ar trebui să ne zgârcim când vine vorba de cât de lung le denumim.\nEditoarele moderne ne pot ajuta să scriem chiar și variabile lungi.\n\nÎn foarte rare cazuri, în care prescurtarea este foarte cunoscută (precum „i” pentru „iteration”, sau „btn” pentru „buton”), putem pune prescurtări.\n*\u002F",lessonIndex:e,lessonCount:b,nextLesson:"4-function",previousLesson:"2-if"},code:m,editor:g},scheme:{scheme:m,isLightScheme:k}}}}(3,4,5,0,2,1,null,"paragraph","3-bg",7,false,"2022-12-24T19:21:31.255Z",""));