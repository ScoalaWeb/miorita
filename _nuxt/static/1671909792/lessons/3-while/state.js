window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1671909792",layout:"default",error:g,serverRendered:true,routePath:i,config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:g},content:{dbHash:"c20fcc56"}},globalRefs:{},pinia:{lesson:{lessons:[{title:"Meet Miorița",description:"take a look at what Miorița can do",link:"lessons\u002F1-intro",background:"1-bg"},{title:"Conditional statements",description:"learn to run different sets of instructions depending on a condition.",link:"lessons\u002F2-if",background:"2-bg"},{title:j,description:k,link:"lessons\u002F3-while",background:l},{title:"Functions",description:"create your own insructions that you can reuse whenever you want.",link:"lessons\u002F4-function",background:"4-bg"}],options:{slug:"3-while",size:{x:m,y:m},start:{position:{x:d,y:d},orientation:"E"},walls:{x:[{x:c,y:f},{x:c,y:e},{x:c,y:a},{x:c,y:b},{x:c,y:c},{x:d,y:e},{x:d,y:a},{x:d,y:b},{x:d,y:c},{x:b,y:e},{x:b,y:a},{x:b,y:b},{x:f,y:a},{x:f,y:b},{x:a,y:a}],y:[{x:d,y:d},{x:f,y:d},{x:e,y:d},{x:a,y:d},{x:b,y:d},{x:c,y:d},{x:f,y:c},{x:e,y:c},{x:a,y:c},{x:b,y:c},{x:c,y:c},{x:f,y:f},{x:e,y:f},{x:a,y:f},{x:b,y:f},{x:e,y:b},{x:a,y:b},{x:b,y:b},{x:e,y:e},{x:a,y:e},{x:a,y:a}]},objects:[{type:"grass",position:{x:a,y:a},fixed:n}],timeout:500,dir:"\u002Flessons",path:i,extension:".json",createdAt:o,updatedAt:o,title:j,description:k,background:l,details:[{title:"instructions",text:"We already know that Miorița can be programmed to execute certain commands.\n\nBut repeating them can be rather redundant and confusing. Sometimes we may not even know how many times we need to repeat them.\n",class:h},{title:"commands",text:"for() { }\nwhile() { }\nvar\n",class:h},{title:"challenge",text:"Help Miorița get to the center of the spiral.\nThere are multiple ways to do it. Some are quicker, others require less code, and there are some you may think of after learning about functions in the next lesson.\nWhich one would you use?\n",class:h}],workCode:"while(canMove()) {\n\u002F\u002F The \"while\" command makes the following command repeat as long as the condition is true.\n        move()\n    }\n\n\u002F*\nWhat if you know exactly how many times you need to repeat? You can use variables.\n\nVariables hold information in the computer's memory.\nA variable can have any name you want, made from letters, numbers and some special characters.\nThe name of the variable cannot start with a number.\nTo give a variable a value, you use the = sign, with the variable on the left and the value you want to assign to it on the right.\nThe value you've given the variable will be used instead of the variable in future operations.\n\nIn the programming language we use here, variables are defined using the \"var\" keyword.\n*\u002F\n\n    var iteration = 1\n\n    while (iteration \u003C 7) {\n        move()\n\n\u002F\u002F The variable's value can change to anything you want including the result of a expression or even a command that returns a value.\n\u002F\u002F There is nothing stopping us from the variable itself in that expression.\n        iteration = iteration + 1;\n    }\n\n\u002F\u002F The above is so often needed that there is a shorter way to do it:\n\n    for (var i = 1; i \u003C 7; i = i + 1) {\n\u002F\u002F The \"for\" command makes the following re-run as long as the second expression is true.\n\u002F\u002F The first expression runs only once before anything else.\n\u002F\u002F The last expression runs at the end of every iteration.\n\n        move()\n    }\n\n\u002F*\nVariable names should be as descriptive as possible.\nLonger names are harder to write, but most modern code editors can auto-complete them.\n\n\"i\" is often used as short for \"iteration\", so it is OK.\n*\u002F\n",lessonIndex:e,lessonCount:b,nextLesson:"4-function",previousLesson:"2-if"},code:p,editor:g},scheme:{scheme:p,isLightScheme:n}}}}(3,4,5,0,2,1,null,"paragraph","\u002Flessons\u002F3-while","Loops & variables","find ways to run the same commands multiple times in succesion.","3-bg",7,false,"2022-12-24T19:21:31.255Z",""));