description: 'Learn how to'


worldOptions:
    size:
        x: 7
        y: 7
    start:
        position: { x: 0, y: 0 }
        orientation: E
    walls:
        x:
            - { x: 5, y: 1 }
            - { x: 5, y: 2 }
            - { x: 5, y: 3 }
            - { x: 5, y: 4 }
            - { x: 5, y: 5 }
            - { x: 0, y: 2 }
            - { x: 0, y: 3 }
            - { x: 0, y: 4 }
            - { x: 0, y: 5 }
            - { x: 4, y: 2 }
            - { x: 4, y: 3 }
            - { x: 4, y: 4 }
            - { x: 1, y: 3 }
            - { x: 1, y: 4 }
            - { x: 3, y: 3 }
        y:
            - { x: 0, y: 0 }
            - { x: 1, y: 0 }
            - { x: 2, y: 0 }
            - { x: 3, y: 0 }
            - { x: 4, y: 0 }
            - { x: 5, y: 0 }
            - { x: 1, y: 5 }
            - { x: 2, y: 5 }
            - { x: 3, y: 5 }
            - { x: 4, y: 5 }
            - { x: 5, y: 5 }
            - { x: 1, y: 1 }
            - { x: 2, y: 1 }
            - { x: 3, y: 1 }
            - { x: 4, y: 1 }
            - { x: 2, y: 4 }
            - { x: 3, y: 4 }
            - { x: 4, y: 4 }
            - { x: 2, y: 2 }
            - { x: 3, y: 2 }
            - { x: 3, y: 3 }
    objects:
        -   type: grass
            position: { x: 3, y: 3 }
            fixed: false
    timeout: 500
    lesson: 3
    nextLesson: '4-function'
    previousLesson: '2-if'
    title: Loops
    details:
        -   title: 'instructions'
            text:
                - We already know that Miorița can be programmed to execute certain commands.
                - But repeating them can be rather redundant and confusing. Sometimes we may not even know how many times we need to repeat them.
            class: 'paragraph'
        -   title: 'new commands'
            text:
                - for() { }
                - while() { }
                - var
            class: 'code'
        -   title: 'challenge'
            text:
                - Help Miorița get to the center of the spiral.
                - There are multiple ways to do it. Some are quicker, others require less code, and there are some you may think of after learning about functions in the next lesson.
                - Which one would you use?
            class: 'paragraph'

workCode: |-
    while(canMove()) {
        // The "while" command makes the following command repeat as long as the condition is true.
        move()
    }

    /*
        What if you know exactly how many times you need to repeat? You can use variables.

        Variables hold information in the computer's memory.
        A variable can have any name you want, made from letters, numbers and some special characters.
        The name of the variable cannot start with a number.
        To give a variable a value, you use the = sign, with the variable on the left and the value
        you want to assign to it on the right.
        The value you've given the variable will be used instead of the variable in future operations.

        In the programming language we use here, variables are defined using the "var" keyword.
    */

    var iteration = 1

    while (iteration < 7) {
        move()

        // The variable's value can change to anything you want,
        // including the result of a expression or even a command that returns a value.
        // There is nothing stopping us from the variable itself in that expression.
        iteration = iteration + 1;
    }

    // The above is so often needed that there is a shorter way to do it:

    for (var i = 1; i < 7; i = i + 1) {
        // The "for" command makes the following re-run as long as the second expression is true.
        // The first expression runs only once before anything else.
        // The last expression runs at the end of every iteration.

        move()
    }

    /*
        Variable names should be as descriptive as possible.
        Longer names are harder to write, but most modern code editors can auto-complete them.

        "i" is often used as short for "iteration", so it is OK.
    */
